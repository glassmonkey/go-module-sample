// Code generated by MockGen. DO NOT EDIT.
// Source: main.go
//
// Generated by this command:
//
//	mockgen -source=main.go -package=mock_main -destination=mock/main/mock_main.go
//

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTester is a mock of Tester interface.
type MockTester struct {
	ctrl     *gomock.Controller
	recorder *MockTesterMockRecorder
}

// MockTesterMockRecorder is the mock recorder for MockTester.
type MockTesterMockRecorder struct {
	mock *MockTester
}

// NewMockTester creates a new mock instance.
func NewMockTester(ctrl *gomock.Controller) *MockTester {
	mock := &MockTester{ctrl: ctrl}
	mock.recorder = &MockTesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTester) EXPECT() *MockTesterMockRecorder {
	return m.recorder
}

// Test mocks base method.
func (m *MockTester) Test() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Test")
}

// Test indicates an expected call of Test.
func (mr *MockTesterMockRecorder) Test() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test", reflect.TypeOf((*MockTester)(nil).Test))
}
